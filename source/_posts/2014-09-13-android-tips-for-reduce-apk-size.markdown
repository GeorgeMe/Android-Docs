---
layout: post
title: "Android APK安装包瘦身"
date: 2014-09-13 20:24
comments: true
sidebar: false
categories: Android Android:Notes
---

很显然，APK安装包越小越好。下面从代码，资源文件，使用策略几个方面简要介绍下：

### 代码

* 保持良好的编程习惯，不要重复或者不用的代码，谨慎添加libs，移除使用不到的libs。
* 使用proguard混淆代码，它会对不用的代码做优化，并且混淆后也能够减少安装包的大小。
* native code的部分，大多数情况下只需要支持armabi与x86的架构即可。如果非必须，可以考虑拿掉x86的部分。

### 资源

* 使用Lint工具查找没有使用到的资源。去除不使用的图片，String，XML等等。
* assets目录下的资源请确保没有用不上的文件。
* 生成APK的时候，aapt工具本身会对png做优化，但是在此之前还可以使用其他工具如tinypng对图片进行进一步的压缩预处理。
* jpeg还是png，根据需要做选择，在某些时候jpeg可以减少图片的体积。
* 对于9.png的图片，可拉伸区域尽量切小，另外可以通过使用9.png拉伸达到大图效果的时候尽量不要使用整张大图。

<!-- More -->

### 策略

* 有选择性的提供hdpi，xhdpi，xxhdpi的图片资源。建议优先提供xhdpi的图片，对于mdpi，ldpi与xxxhdpi根据需要提供有差异的部分即可。
* 尽可能的重用已有的图片资源。例如对称的图片，只需要提供一张，另外一张图片可以通过代码旋转的方式实现。
* 能用代码绘制实现的功能，尽量不要使用大量的图片。例如减少使用多张图片组成animate-list的AnimationDrawable，这种方式提供了多张图片很占空间。

### 总结

一个好的应用，需要具备很多优点，尽可能提供小的安装包是其中一个重要的方面。以上的小技巧，需要综合考虑，结合实际情况进行取舍。当然我们还可以采取一些按需加载的策略来减少安装包的体积，最好提一点，砍掉不必要的功能才是安装包瘦身的终极奥秘。O(∩_∩)O哈！




